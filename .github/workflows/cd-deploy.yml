name: Deploy

on:
  push:
  # TODO: Change to Pull Request instead of push
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: Azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          printenv
          docker build . -t ${{ secrets.ACR_NAME }}/strapi:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}/strapi:${{ github.sha }}

      - uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: dev-qg9132f9-aks
          resource-group: dev-qg9132f9-k8s


      - uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: cloudlifeacr.azurecr.io
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: k8s-secret

      # - uses: Azure/k8s-deploy@v1
      #   with:
      #     manifests: |
      #       manifests/deployment.yaml
      #       manifests/service.yaml
      #     images: |
      #       cloudlifeacr.azurecr.io/k8sflask:${{ github.sha }}
      #     imagepullsecrets: |
      #       k8s-secret






      # - name: Build and push Docker images
      #   uses: docker/build-push-action@v2
      #   with:
      #     username: ${{ secrets.ACR_LOGIN }}
      #     password: ${{ secrets.ACR_PASSWORD }}
      #     registry: ${{ secrets.ACR_NAME }}
      #     repository: devqg9132f9acr.azurecr.io
      #     tags: latest
      #     path: strapi



      # - name: Build and push Docker images
      #   uses: docker/build-push-action@v2.1.0
      #   with:
      #     # Builder instance
      #     #builder: # optional
      #     # Build's context is the set of files located in the specified PATH or URL
      #     context: strapi
      #     # Path to the Dockerfile
      #     #file: # optional, default is ./Dockerfile
      #     # List of build-time variables
      #     #build-args: # optional
      #     # List of metadata for an image
      #     #labels: # optional
      #     # List of tags
      #     #tags: # optional
      #     # Always attempt to pull a newer version of the image
      #     #pull: # optional, default is false
      #     # Sets the target stage to build
      #     #target: # optional
      #     # List of extra privileged entitlement (eg. network.host,security.insecure)
      #     #allow: # optional
      #     # Do not use cache when building the image
      #     #no-cache: # optional, default is false
      #     # List of target platforms for build
      #     #platforms: # optional
      #     # Load is a shorthand for --output=type=docker
      #     #load: # optional, default is false
      #     # Push is a shorthand for --output=type=registry
      #     push: # optional, default is false
      #     # List of output destinations (format: type=local,dest=path)
      #     outputs: # optional
      #     # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
      #     #cache-from: # optional
      #     # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
      #     #cache-to: # optional
      #     # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
      #     #secrets: # optional
      #     # GitHub Token used to authenticate against a repository for Git context
      #     github-token: # optional, default is ${{ github.token }}
      #     # List of SSH agent socket or keys to expose to the build
      #     ssh: # optional






      # - name: Azure Container Registry Login
      #   uses: Azure/docker-login@v1
      #   with:
      #     # Container registry username
      #     username: # default is 
      #     # Container registry password
      #     password: # default is 
      #     # Container registry server url
      #     login-server: # default is https://index.docker.io/v1/


      # # - name: Deploy to Kubernetes cluster
      # #   uses: Azure/k8s-deploy@v1.3
      # #   with:
      # #     # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
      # #     namespace: # optional
      # #     # Path to the manifest files which will be used for deployment.
      # #     manifests: # default is 
      # #     # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
      # #     images: # optional
      # #     # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
      # #     imagepullsecrets: # optional
      # #     # Version of kubectl. Installs a specific version of kubectl binary
      # #     kubectl-version: # optional
      # #     # Deployment strategy to be used. Allowed values are none, canary and blue-green
      # #     strategy: # optional, default is none
      # #     # Route based on service, ingress or SMI for blue-green strategy
      # #     route-method: # optional, default is service
      # #     # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
      # #     version-switch-buffer: # optional, default is 0
      # #     # Traffic split method to be used. Allowed values are pod, smi
      # #     traffic-split-method: # optional, default is pod
      # #     # Baseline and canary replicas count; valid value i.e between 0 to 100.
      # #     baseline-and-canary-replicas: # optional, default is 0
      # #     # Percentage of traffic redirect to canary deployment
      # #     percentage: # optional, default is 0
      # #     # Arguments
      # #     args: # optional
      # #     # deploy/promote/reject
      # #     action: # default is deploy
      # #     # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
      # #     force: # optional
      # #     # Github token
      # #     token: # default is ${{ github.token }}

      # # - name: Container image scan
      # #   uses: Azure/container-scan@v0
      # #   with:
      # #     # Docker image to scan
      # #     image-name: 
      # #     # Minimum severities of vulnerabilities to be displayed (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)
      # #     severity-threshold: # optional, default is HIGH
      # #     # Username to authenticate to the Docker registry
      # #     username: # optional
      # #     # Password to authenticate to the Docker registry
      # #     password: # optional
      # #     # Github token
      # #     token: # default is ${{ github.token }}
      # #     # Add additional checks to ensure the image is secure and follows best practices and CIS standards
      # #     run-quality-checks: # optional, default is true